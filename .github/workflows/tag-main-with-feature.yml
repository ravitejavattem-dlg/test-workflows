name: Tag main on feature branch merge

permissions:
  contents: write

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  tag-main:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'feature/v')
    runs-on: ubuntu-latest
    steps:
      - name: Extract version from branch name
        id: extract_version
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=$(echo "$BRANCH_NAME" | sed -nE 's|feature/v([0-9]+\.[0-9]+\.[0-9]+).*|\1|p')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Check if tag already exists
        id: check_tag
        run: |
          TAG="v${{ steps.extract_version.outputs.version }}"
          if git fetch --tags && git tag --list | grep -q "^$TAG$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate release notes
        id: generate_notes
        run: |
          TAG="v${{ steps.extract_version.outputs.version }}"
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            RANGE="$LAST_TAG..HEAD"
          else
            RANGE="HEAD"
          fi
          echo "## What's Changed" > release-notes.md
          git log --merges --pretty=format:'%s||%an' $RANGE | \
            grep -E 'Merge pull request' | \
            sed -E 's/Merge pull request #(\d+) from [^ ]+ (.*)/\1||\2/' | \
            while IFS='||' read -r subject author; do
              PR_NUM=$(echo "$subject" | grep -oE '^[0-9]+')
              TITLE=$(echo "$subject" | sed -E 's/^[0-9]+\|\|(.*)/\1/')
              if echo "$TITLE" | grep -qi 'add'; then
                PREFIX="Added"
              elif echo "$TITLE" | grep -qi 'change'; then
                PREFIX="Changed"
              elif echo "$TITLE" | grep -qi 'move'; then
                PREFIX="Moved"
              else
                PREFIX="Updated"
              fi
              echo "$PREFIX $TITLE by @$author in #$PR_NUM" >> release-notes.md
            done
          echo "" >> release-notes.md
          echo "Full Changelog: https://github.com/${{ github.repository }}/commits/$TAG" >> release-notes.md
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          cat release-notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create tag on main
        if: steps.extract_version.outputs.version != '' && steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag "v${{ steps.extract_version.outputs.version }}"
          git push origin "v${{ steps.extract_version.outputs.version }}"

      - name: Create GitHub Release
        if: steps.extract_version.outputs.version != '' && steps.check_tag.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          release_name: Release v${{ steps.extract_version.outputs.version }}
          body: ${{ steps.generate_notes.outputs.release_notes }}
